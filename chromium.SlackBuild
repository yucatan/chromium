#!/bin/bash

# Slackware build script for Google Chromium
#
# This is script was inspired on the one used by Arch:
# (http://repos.archlinux.org/wsvn/packages/chromium/trunk/PKGBUILD)
#
# A special thanks to Niels Horn who helped me fixing some errors on
# the script and for testing it.
#
# A very special thanks to Gino Bombino (ginolovesyou AT gmail DOT com), who
# contributed with the parameters to disable the need for gnome dependencies
# and PAM, allowing the script to be cleaner and more elegant (no need for a
# a patch to disable PAM). And another special thanks to dive who handed me
# the nacl.patch, fixing another compile problem.
#
# Copyright 2010  Yucatan "Kenjiro" Costa, Alegrete, RS, Brasil
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=chromium
VERSION=${VERSION:-19.0.1056.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_ken}


if [ -z "$ARCH" ]; then
	case "$( uname -m )" in
    		i?86) ARCH=i486 ;;
    		arm*) ARCH=arm ;;
       		*) ARCH=$( uname -m ) ;;
  	esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
	SLKCFLAGS="-O2 -march=i486 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
	SLKCFLAGS="-O2 -march=i686 -mtune=i686"
	LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
	SLKCFLAGS="-O2 -fPIC"
	LIBDIRSUFFIX="64"
else
	SLKCFLAGS="-O2"
	LIBDIRSUFFIX=""
fi

set -e # Exit on most errors

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.bz2
cd $PRGNAM-$VERSION
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Let's try this nacl patch (thanks to dive):
patch -p1 < $CWD/nacl.patch

# Configure it before compiling

#
# Change "-Dproprietary_codecs" to "0" if you don't want to use proprietary codecs
#

build/gyp_chromium --depth=. \
 -Dgcc_version=45 \
 -Duse_gconf=0 \
 -Duse_gnome_keyring=0 \
 -Dlinux_link_gnome_keyring=0 \
 -Dremove_webcore_debug_symbols=1 \
 -Dremoting=0 \
 -Dchromeos=0 \
 -Dwerror=0 \
 -Dno_strict_aliasing=1 \
 -Dwerror= \
 -Dlinux_sandbox_path=/usr/lib${LIBDIRSUFFIX}/chromium/chrome_sandbox \
 -Dlinux_strip_binary=1 \
 -Dproprietary_codecs=1 \
 -Duse_system_libjpeg=1 \
 -Duse_system_libxslt=1 \
 -Duse_system_libxml=1 \
 -Duse_system_bzip2=1 \
 -Duse_system_zlib=1 \
 -Duse_system_libpng=0 \
 -Duse_system_yasm=1 \
 -Duse_system_libevent=1 \
 -Ddisable_sse2=${NO_SSE2:-0} \
 -Dffmpeg_branding=Chrome \
 -Duse_system_ffmpeg=0 \
 -Ddisable_nacl=1 \
 -Duse_kerberos=0 \
 -Duse_system_ssl=0


# Compiling...

# Let's try this change on CXXFLAGS dive told me about. It should solve the dbus problem when building.
###CXXFLAGS="$SLKCFLAGS -fno-ipa-cp" \

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS -I/usr/include/dbus-1.0 -I/usr/lib$LIBDIRSUFFIX/dbus-1.0/include" \
make chrome chrome_sandbox BUILDTYPE=Release || exit 1

# Creating the package
cd out/Release/
  mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  mkdir -p $PKG/usr/bin
  install -m 0755 -D chrome $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  install -m 4555 -o root -g root -D chrome_sandbox $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  install -m 0644 -D chrome.pak $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  install -m 0644 -D resources.pak $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  install -m 0755 -D libffmpegsumo.so $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  cp -a locales/ $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  cp -a resources/ $PKG/usr/lib${LIBDIRSUFFIX}/chromium
  find $PKG -name '*.d' -type f -delete

  mkdir -p $PKG/usr/man/man1
  install -m 0644 -D chrome.1 $PKG/usr/man/man1/
  mkdir -p $PKG/usr/share/pixmaps
  cp product_logo_48.png $PKG/usr/share/pixmaps/chromium.png
  mkdir -p $PKG/usr/share/applications
  cp $CWD/chromium.desktop $PKG/usr/share/applications

cd ../../
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a \
  AUTHORS LICENSE \
  $PKG/usr/doc/$PRGNAM-$VERSION/

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

cd $PKG
  ln -s /usr/lib${LIBDIRSUFFIX}/chromium/chrome $PKG/usr/bin/chrome
  ln -s /usr/lib${LIBDIRSUFFIX}/chromium/chrome_sandbox $PKG/usr/bin/chrome_sandbox

cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
